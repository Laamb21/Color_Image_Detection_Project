Approach for color detection:

1. Image Preprocessing
- Load the image 
- Convert to different color modes:
    - Color image (RGB)
    - Grayscale image
    - Black adn White (Binary)

2. Color Quantization
- In color images, we want to reduce the number of shades or colors to better analyze them
- By reducing the number of colors (i.e., K-means clustering on pixel values or reducing bit depth of each channel), 
you can simplify the analysis by grouping similar shades together

3. Shade detection
- Color Images:
    - For each pixel, extract its RGB values
    - Quantize or bin the RBG values to group similar colors into shades. (Example: reduce each RGB channel to range like 
    0 - 15, 16 - 31, etc.)
    - Count how many pixels fall into each shade
- Grayscale Images
    - A grayscale image has 256 possible intensity values (shades of gray)
    - You can directly count how many pixels belong to each intensity level (0 or 255), or group the intensities into 
    buckets (Example: shades 0 - 50, 51 - 100, etc.)
- Black and White (Binary Images):
    - In binary images, there are only two shades: 0 (black) and 255 (white). Simply count the number of pixels of each

4. Shade Grouping
- To efficiently detect similar shades, we can:
    - Use K-means clustering to group similar colors together
    - Use histograms to aggregate the frequencies of different color values and find prominent shades

5. Count shades
- For each detected shade (or cluster), count the number of pixels belonging to that shade. For color images, you might 
want to group by color distance (e.g., Euclidian distance in RGB or LAB space)

6. Visualization
- Use histograms or color maps to visually represent the distribution of different shades in the image. For grayscale images, 
a simple intensity histogram can show the distribution of shades.
- For color images, plotting shades using a color bar or pie chart can give an intuitive sense of the color distribution.
